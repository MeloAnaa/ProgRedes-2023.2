
import csv, os

# Função para ler o arquivo de dados do Cartola FC
def ler_arquivo_cartola(ano):
    try:
        with open(f"cartola_fc_{ano}.csv", "r", newline="") as arquivo:
            leitor_csv = csv.reader(arquivo)
            dados = [linha for linha in leitor_csv]
        return dados
    except FileNotFoundError:
        print(f"Arquivo para o ano {ano} não encontrado.")
        return None
    except Exception as e:
        print(f"Ocorreu um erro ao ler o arquivo: {e}")
        return None

# Função para obter a escalação com base no esquema tático
def obter_escalação(esquema):
    esquemas = {
        "3-4-3": {"Zagueiro": 3, "Lateral": 0, "Meia": 4, "Atacante": 3},
        "3-5-2": {"Zagueiro": 3, "Lateral": 0, "Meia": 5, "Atacante": 2},
        "4-3-3": {"Zagueiro": 2, "Lateral": 2, "Meia": 3, "Atacante": 3},
        "4-4-2": {"Zagueiro": 2, "Lateral": 2, "Meia": 4, "Atacante": 2},
        "4-5-1": {"Zagueiro": 2, "Lateral": 2, "Meia": 5, "Atacante": 1},
        "5-3-2": {"Zagueiro": 3, "Lateral": 2, "Meia": 3, "Atacante": 2},
        "5-4-1": {"Zagueiro": 3, "Lateral": 2, "Meia": 4, "Atacante": 1},
    }

    return esquemas.get(esquema)

# Função para selecionar os melhores jogadores por posição
def selecionar_jogadores_por_posicao(dados, posicao, quantidade):
    # Filtra os jogadores da posição desejada
    jogadores = [jogador for jogador in dados if jogador[2] == posicao]

    # Verifica se há jogadores suficientes na posição
    if len(jogadores) < quantidade:
        print(f"Não há jogadores suficientes na posição {posicao}.")
        return []

    # Ordena os jogadores pelo critério de maior pontuação (média de pontos x quantidade de partidas)
    jogadores.sort(key=lambda x: float(x[8]) * float(x[9]), reverse=True)

    # Retorna os melhores jogadores na quantidade especificada
    return jogadores[:quantidade]

# Programa principal
if __name__ == "__main__":
    ano = input("Informe o ano desejado para acessar os dados do Cartola FC (2021 ou 2022): ")

    # Verificar se o ano fornecido é válido
    if ano not in ["2021", "2022"]:
        print("Ano deve ser 2021 ou 2022.")
        exit(1)

    dados = ler_arquivo_cartola(ano)

    if dados:
        esquema = input("Informe o esquema tático desejado (ex: 3-4-3): ")

        # Verifica se o esquema tático é válido
        if esquema not in ["3-4-3", "3-5-2", "4-3-3", "4-4-2", "4-5-1", "5-3-2", "5-4-1"]:
            print("Esquema tático não reconhecido.")
            exit(1)

        escalação = obter_escalação(esquema)

        # Verifica se o esquema é válido
        if not escalação:
            print("Esquema tático não reconhecido.")
            exit(1)

        print(f"Escalação para o esquema {esquema}: {escalação}\n")

        # Inicializa a lista de jogadores selecionados
        jogadores_selecionados = []

        # Seleciona 1 goleiro e 1 técnico
        jogadores_selecionados.extend(selecionar_jogadores_por_posicao(dados, "Goleiro", 1))
        jogadores_selecionados.extend(selecionar_jogadores_por_posicao(dados, "Técnico", 1))

        # Seleciona os jogadores de acordo com a escalação
        for posicao, quantidade in escalação.items():
            jogadores_selecionados.extend(selecionar_jogadores_por_posicao(dados, posicao, quantidade))

        # Salva os dados em um arquivo
        nome_arquivo = f"selecao_cartola_fc_{ano}.txt"
        with open(nome_arquivo, "w") as arquivo_saida:
            # Escreve os dados de cada jogador
            for jogador in jogadores_selecionados:
                posicao = jogador[2]
                nome_abreviado = jogador[3]
                time = jogador[4]
                pontuacao = float(jogador[8]) * float(jogador[9])
                url_foto_atleta = jogador[10]
                url_escudo_time = jogador[11]
                arquivo_saida.write(f"Posição: {posicao}\n")
                arquivo_saida.write(f"Nome Abreviado: {nome_abreviado}\n")
                arquivo_saida.write(f"Time: {time}\n")
                arquivo_saida.write(f"Pontuação: {pontuacao:.2f}\n")
                arquivo_saida.write(f"URL da foto do jogador: {url_foto_atleta}\n")
                arquivo_saida.write(f"URL do escudo do time: {url_escudo_time}\n")
                arquivo_saida.write("\n")

        print(f"\nOs dados foram salvos no arquivo: {nome_arquivo}")






